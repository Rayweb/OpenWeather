package com.finleap.weather.util;

import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneOffset;
import java.time.temporal.ChronoUnit;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Component;

import com.finleap.weather.owp.dtos.WeatherDetails;

@Component
public class WeatherAverageCalculator {

	public double getDailyAveragetemperature(List<WeatherDetails> weatherDetails) {
		return weatherDetails.stream()
				.filter(wd -> isDateInRange(wd.getDt()))
				.filter(wd -> isDayTimeForecast(wd.getDt()))
				//.peek(twd -> System.out.println(twd.dt_txt))
				.mapToDouble(wd -> wd.main.getTemp()).summaryStatistics().getAverage();
	}

	public double getNightlyAveragetemperature(List<WeatherDetails> weatherDetails) {
		return weatherDetails.stream()
				.filter(wd -> isDateInRange(wd.getDt()))
				.filter(wd -> !isDayTimeForecast(wd.getDt()))
				//.peek(twd -> System.out.println(twd.dt_txt))
				.mapToDouble(wd -> wd.main.getTemp()).summaryStatistics().getAverage();
	}

	public double getPressureAverage(List<WeatherDetails> weatherDetails) {
		return weatherDetails.stream().filter(wd -> isDateInRange(wd.getDt())).mapToDouble(wd -> wd.main.getPressure())
				.summaryStatistics().getAverage();
	}

}
